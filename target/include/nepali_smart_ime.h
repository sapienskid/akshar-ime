/* Auto-generated by cbindgen */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef struct ImeEngine ImeEngine;

/**
 * An opaque pointer to our Rust ImeEngine instance.
 * C code will hold this pointer but won't know what's inside.
 */
typedef struct ImeEngine *ImeEngineHandle;

/**
 * Represents a list of suggestion strings to be passed to C.
 */
typedef struct CSuggestionList {
  char **suggestions;
  uintptr_t length;
} CSuggestionList;

/**
 * Creates a new IME engine instance and returns an opaque handle to it.
 * The caller is responsible for calling `nepali_smart_ime_destroy` later.
 */
ImeEngineHandle nepali_smart_ime_create(void);

void nepali_smart_ime_destroy(ImeEngineHandle handle);

/**
 * Processes the user's pre-edit text and returns a list of suggestions.
 */
struct CSuggestionList nepali_smart_ime_get_suggestions(ImeEngineHandle handle,
                                                        const char *preedit);

/**
 * Frees the memory allocated for the suggestion list.
 * Must be called by the C code after it's done with the suggestions.
 */
void nepali_smart_ime_free_suggestions(struct CSuggestionList list);

/**
 * Informs the engine that the user has confirmed a word.
 */
void nepali_smart_ime_confirm_word(ImeEngineHandle handle, const char *roman, const char *nepali);
